//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RSSFeedDatabaseModel", "FK_FEED_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RSSFeedService.CATEGORY), "FEED", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RSSFeedService.FEED), true)]
[assembly: EdmRelationshipAttribute("RSSFeedDatabaseModel", "FK_ITEM_FEED", "FEED", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RSSFeedService.FEED), "ITEM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RSSFeedService.ITEM), true)]
[assembly: EdmRelationshipAttribute("RSSFeedDatabaseModel", "FK_USER_ROLE", "ROLE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RSSFeedService.ROLE), "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RSSFeedService.USER), true)]
[assembly: EdmRelationshipAttribute("RSSFeedDatabaseModel", "FK_USER_STATUS", "STATUS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RSSFeedService.STATUS), "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RSSFeedService.USER), true)]
[assembly: EdmRelationshipAttribute("RSSFeedDatabaseModel", "READ", "ITEM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RSSFeedService.ITEM), "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RSSFeedService.USER))]
[assembly: EdmRelationshipAttribute("RSSFeedDatabaseModel", "SUBSCRIBE", "FEED", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RSSFeedService.FEED), "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RSSFeedService.USER))]

#endregion

namespace RSSFeedService
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RSSFeedDatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RSSFeedDatabaseEntities object using the connection string found in the 'RSSFeedDatabaseEntities' section of the application configuration file.
        /// </summary>
        public RSSFeedDatabaseEntities() : base("name=RSSFeedDatabaseEntities", "RSSFeedDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RSSFeedDatabaseEntities object.
        /// </summary>
        public RSSFeedDatabaseEntities(string connectionString) : base(connectionString, "RSSFeedDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RSSFeedDatabaseEntities object.
        /// </summary>
        public RSSFeedDatabaseEntities(EntityConnection connection) : base(connection, "RSSFeedDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATEGORY> CATEGORY
        {
            get
            {
                if ((_CATEGORY == null))
                {
                    _CATEGORY = base.CreateObjectSet<CATEGORY>("CATEGORY");
                }
                return _CATEGORY;
            }
        }
        private ObjectSet<CATEGORY> _CATEGORY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FEED> FEED
        {
            get
            {
                if ((_FEED == null))
                {
                    _FEED = base.CreateObjectSet<FEED>("FEED");
                }
                return _FEED;
            }
        }
        private ObjectSet<FEED> _FEED;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ITEM> ITEM
        {
            get
            {
                if ((_ITEM == null))
                {
                    _ITEM = base.CreateObjectSet<ITEM>("ITEM");
                }
                return _ITEM;
            }
        }
        private ObjectSet<ITEM> _ITEM;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ROLE> ROLE
        {
            get
            {
                if ((_ROLE == null))
                {
                    _ROLE = base.CreateObjectSet<ROLE>("ROLE");
                }
                return _ROLE;
            }
        }
        private ObjectSet<ROLE> _ROLE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STATUS> STATUS
        {
            get
            {
                if ((_STATUS == null))
                {
                    _STATUS = base.CreateObjectSet<STATUS>("STATUS");
                }
                return _STATUS;
            }
        }
        private ObjectSet<STATUS> _STATUS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<USER> USER
        {
            get
            {
                if ((_USER == null))
                {
                    _USER = base.CreateObjectSet<USER>("USER");
                }
                return _USER;
            }
        }
        private ObjectSet<USER> _USER;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATEGORY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATEGORY(CATEGORY cATEGORY)
        {
            base.AddObject("CATEGORY", cATEGORY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FEED EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFEED(FEED fEED)
        {
            base.AddObject("FEED", fEED);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ITEM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToITEM(ITEM iTEM)
        {
            base.AddObject("ITEM", iTEM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ROLE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToROLE(ROLE rOLE)
        {
            base.AddObject("ROLE", rOLE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STATUS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTATUS(STATUS sTATUS)
        {
            base.AddObject("STATUS", sTATUS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the USER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUSER(USER uSER)
        {
            base.AddObject("USER", uSER);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSSFeedDatabaseModel", Name="CATEGORY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATEGORY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATEGORY object.
        /// </summary>
        /// <param name="category_id">Initial value of the category_id property.</param>
        /// <param name="category_name">Initial value of the category_name property.</param>
        public static CATEGORY CreateCATEGORY(global::System.Int64 category_id, global::System.String category_name)
        {
            CATEGORY cATEGORY = new CATEGORY();
            cATEGORY.category_id = category_id;
            cATEGORY.category_name = category_name;
            return cATEGORY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 category_id
        {
            get
            {
                return _category_id;
            }
            set
            {
                if (_category_id != value)
                {
                    Oncategory_idChanging(value);
                    ReportPropertyChanging("category_id");
                    _category_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("category_id");
                    Oncategory_idChanged();
                }
            }
        }
        private global::System.Int64 _category_id;
        partial void Oncategory_idChanging(global::System.Int64 value);
        partial void Oncategory_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String category_name
        {
            get
            {
                return _category_name;
            }
            set
            {
                Oncategory_nameChanging(value);
                ReportPropertyChanging("category_name");
                _category_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("category_name");
                Oncategory_nameChanged();
            }
        }
        private global::System.String _category_name;
        partial void Oncategory_nameChanging(global::System.String value);
        partial void Oncategory_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "FK_FEED_CATEGORY", "FEED")]
        public EntityCollection<FEED> FEED
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FEED>("RSSFeedDatabaseModel.FK_FEED_CATEGORY", "FEED");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FEED>("RSSFeedDatabaseModel.FK_FEED_CATEGORY", "FEED", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSSFeedDatabaseModel", Name="FEED")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FEED : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FEED object.
        /// </summary>
        /// <param name="feed_id">Initial value of the feed_id property.</param>
        /// <param name="feed_title">Initial value of the feed_title property.</param>
        /// <param name="feed_address">Initial value of the feed_address property.</param>
        /// <param name="feed_link">Initial value of the feed_link property.</param>
        /// <param name="feed_description">Initial value of the feed_description property.</param>
        public static FEED CreateFEED(global::System.Int64 feed_id, global::System.String feed_title, global::System.String feed_address, global::System.String feed_link, global::System.String feed_description)
        {
            FEED fEED = new FEED();
            fEED.feed_id = feed_id;
            fEED.feed_title = feed_title;
            fEED.feed_address = feed_address;
            fEED.feed_link = feed_link;
            fEED.feed_description = feed_description;
            return fEED;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 feed_id
        {
            get
            {
                return _feed_id;
            }
            set
            {
                if (_feed_id != value)
                {
                    Onfeed_idChanging(value);
                    ReportPropertyChanging("feed_id");
                    _feed_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("feed_id");
                    Onfeed_idChanged();
                }
            }
        }
        private global::System.Int64 _feed_id;
        partial void Onfeed_idChanging(global::System.Int64 value);
        partial void Onfeed_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String feed_title
        {
            get
            {
                return _feed_title;
            }
            set
            {
                Onfeed_titleChanging(value);
                ReportPropertyChanging("feed_title");
                _feed_title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("feed_title");
                Onfeed_titleChanged();
            }
        }
        private global::System.String _feed_title;
        partial void Onfeed_titleChanging(global::System.String value);
        partial void Onfeed_titleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String feed_address
        {
            get
            {
                return _feed_address;
            }
            set
            {
                Onfeed_addressChanging(value);
                ReportPropertyChanging("feed_address");
                _feed_address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("feed_address");
                Onfeed_addressChanged();
            }
        }
        private global::System.String _feed_address;
        partial void Onfeed_addressChanging(global::System.String value);
        partial void Onfeed_addressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String feed_link
        {
            get
            {
                return _feed_link;
            }
            set
            {
                Onfeed_linkChanging(value);
                ReportPropertyChanging("feed_link");
                _feed_link = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("feed_link");
                Onfeed_linkChanged();
            }
        }
        private global::System.String _feed_link;
        partial void Onfeed_linkChanging(global::System.String value);
        partial void Onfeed_linkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String feed_description
        {
            get
            {
                return _feed_description;
            }
            set
            {
                Onfeed_descriptionChanging(value);
                ReportPropertyChanging("feed_description");
                _feed_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("feed_description");
                Onfeed_descriptionChanged();
            }
        }
        private global::System.String _feed_description;
        partial void Onfeed_descriptionChanging(global::System.String value);
        partial void Onfeed_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> category_id
        {
            get
            {
                return _category_id;
            }
            set
            {
                Oncategory_idChanging(value);
                ReportPropertyChanging("category_id");
                _category_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("category_id");
                Oncategory_idChanged();
            }
        }
        private Nullable<global::System.Int64> _category_id;
        partial void Oncategory_idChanging(Nullable<global::System.Int64> value);
        partial void Oncategory_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "FK_FEED_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("RSSFeedDatabaseModel.FK_FEED_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("RSSFeedDatabaseModel.FK_FEED_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("RSSFeedDatabaseModel.FK_FEED_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("RSSFeedDatabaseModel.FK_FEED_CATEGORY", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "FK_ITEM_FEED", "ITEM")]
        public EntityCollection<ITEM> ITEM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ITEM>("RSSFeedDatabaseModel.FK_ITEM_FEED", "ITEM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ITEM>("RSSFeedDatabaseModel.FK_ITEM_FEED", "ITEM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "SUBSCRIBE", "USER")]
        public EntityCollection<USER> USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USER>("RSSFeedDatabaseModel.SUBSCRIBE", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USER>("RSSFeedDatabaseModel.SUBSCRIBE", "USER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSSFeedDatabaseModel", Name="ITEM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ITEM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ITEM object.
        /// </summary>
        /// <param name="item_id">Initial value of the item_id property.</param>
        /// <param name="item_title">Initial value of the item_title property.</param>
        /// <param name="item_link">Initial value of the item_link property.</param>
        /// <param name="item_description">Initial value of the item_description property.</param>
        /// <param name="feed_id">Initial value of the feed_id property.</param>
        public static ITEM CreateITEM(global::System.Int64 item_id, global::System.String item_title, global::System.String item_link, global::System.String item_description, global::System.Int64 feed_id)
        {
            ITEM iTEM = new ITEM();
            iTEM.item_id = item_id;
            iTEM.item_title = item_title;
            iTEM.item_link = item_link;
            iTEM.item_description = item_description;
            iTEM.feed_id = feed_id;
            return iTEM;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 item_id
        {
            get
            {
                return _item_id;
            }
            set
            {
                if (_item_id != value)
                {
                    Onitem_idChanging(value);
                    ReportPropertyChanging("item_id");
                    _item_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("item_id");
                    Onitem_idChanged();
                }
            }
        }
        private global::System.Int64 _item_id;
        partial void Onitem_idChanging(global::System.Int64 value);
        partial void Onitem_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String item_title
        {
            get
            {
                return _item_title;
            }
            set
            {
                Onitem_titleChanging(value);
                ReportPropertyChanging("item_title");
                _item_title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("item_title");
                Onitem_titleChanged();
            }
        }
        private global::System.String _item_title;
        partial void Onitem_titleChanging(global::System.String value);
        partial void Onitem_titleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String item_link
        {
            get
            {
                return _item_link;
            }
            set
            {
                Onitem_linkChanging(value);
                ReportPropertyChanging("item_link");
                _item_link = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("item_link");
                Onitem_linkChanged();
            }
        }
        private global::System.String _item_link;
        partial void Onitem_linkChanging(global::System.String value);
        partial void Onitem_linkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String item_description
        {
            get
            {
                return _item_description;
            }
            set
            {
                Onitem_descriptionChanging(value);
                ReportPropertyChanging("item_description");
                _item_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("item_description");
                Onitem_descriptionChanged();
            }
        }
        private global::System.String _item_description;
        partial void Onitem_descriptionChanging(global::System.String value);
        partial void Onitem_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 feed_id
        {
            get
            {
                return _feed_id;
            }
            set
            {
                Onfeed_idChanging(value);
                ReportPropertyChanging("feed_id");
                _feed_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("feed_id");
                Onfeed_idChanged();
            }
        }
        private global::System.Int64 _feed_id;
        partial void Onfeed_idChanging(global::System.Int64 value);
        partial void Onfeed_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "FK_ITEM_FEED", "FEED")]
        public FEED FEED
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FEED>("RSSFeedDatabaseModel.FK_ITEM_FEED", "FEED").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FEED>("RSSFeedDatabaseModel.FK_ITEM_FEED", "FEED").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FEED> FEEDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FEED>("RSSFeedDatabaseModel.FK_ITEM_FEED", "FEED");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FEED>("RSSFeedDatabaseModel.FK_ITEM_FEED", "FEED", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "READ", "USER")]
        public EntityCollection<USER> USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USER>("RSSFeedDatabaseModel.READ", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USER>("RSSFeedDatabaseModel.READ", "USER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSSFeedDatabaseModel", Name="ROLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ROLE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ROLE object.
        /// </summary>
        /// <param name="role_id">Initial value of the role_id property.</param>
        /// <param name="role_name">Initial value of the role_name property.</param>
        public static ROLE CreateROLE(global::System.Int64 role_id, global::System.String role_name)
        {
            ROLE rOLE = new ROLE();
            rOLE.role_id = role_id;
            rOLE.role_name = role_name;
            return rOLE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 role_id
        {
            get
            {
                return _role_id;
            }
            set
            {
                if (_role_id != value)
                {
                    Onrole_idChanging(value);
                    ReportPropertyChanging("role_id");
                    _role_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("role_id");
                    Onrole_idChanged();
                }
            }
        }
        private global::System.Int64 _role_id;
        partial void Onrole_idChanging(global::System.Int64 value);
        partial void Onrole_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String role_name
        {
            get
            {
                return _role_name;
            }
            set
            {
                Onrole_nameChanging(value);
                ReportPropertyChanging("role_name");
                _role_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("role_name");
                Onrole_nameChanged();
            }
        }
        private global::System.String _role_name;
        partial void Onrole_nameChanging(global::System.String value);
        partial void Onrole_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "FK_USER_ROLE", "USER")]
        public EntityCollection<USER> USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USER>("RSSFeedDatabaseModel.FK_USER_ROLE", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USER>("RSSFeedDatabaseModel.FK_USER_ROLE", "USER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSSFeedDatabaseModel", Name="STATUS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STATUS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STATUS object.
        /// </summary>
        /// <param name="status_id">Initial value of the status_id property.</param>
        /// <param name="status_name">Initial value of the status_name property.</param>
        public static STATUS CreateSTATUS(global::System.Int64 status_id, global::System.String status_name)
        {
            STATUS sTATUS = new STATUS();
            sTATUS.status_id = status_id;
            sTATUS.status_name = status_name;
            return sTATUS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                if (_status_id != value)
                {
                    Onstatus_idChanging(value);
                    ReportPropertyChanging("status_id");
                    _status_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("status_id");
                    Onstatus_idChanged();
                }
            }
        }
        private global::System.Int64 _status_id;
        partial void Onstatus_idChanging(global::System.Int64 value);
        partial void Onstatus_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status_name
        {
            get
            {
                return _status_name;
            }
            set
            {
                Onstatus_nameChanging(value);
                ReportPropertyChanging("status_name");
                _status_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status_name");
                Onstatus_nameChanged();
            }
        }
        private global::System.String _status_name;
        partial void Onstatus_nameChanging(global::System.String value);
        partial void Onstatus_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "FK_USER_STATUS", "USER")]
        public EntityCollection<USER> USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USER>("RSSFeedDatabaseModel.FK_USER_STATUS", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USER>("RSSFeedDatabaseModel.FK_USER_STATUS", "USER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RSSFeedDatabaseModel", Name="USER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new USER object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="user_email">Initial value of the user_email property.</param>
        /// <param name="user_password">Initial value of the user_password property.</param>
        /// <param name="status_id">Initial value of the status_id property.</param>
        /// <param name="role_id">Initial value of the role_id property.</param>
        /// <param name="user_connected">Initial value of the user_connected property.</param>
        /// <param name="user_key">Initial value of the user_key property.</param>
        public static USER CreateUSER(global::System.Int64 user_id, global::System.String user_email, global::System.String user_password, global::System.Int64 status_id, global::System.Int64 role_id, global::System.Boolean user_connected, global::System.String user_key)
        {
            USER uSER = new USER();
            uSER.user_id = user_id;
            uSER.user_email = user_email;
            uSER.user_password = user_password;
            uSER.status_id = status_id;
            uSER.role_id = role_id;
            uSER.user_connected = user_connected;
            uSER.user_key = user_key;
            return uSER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                if (_user_id != value)
                {
                    Onuser_idChanging(value);
                    ReportPropertyChanging("user_id");
                    _user_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_id");
                    Onuser_idChanged();
                }
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_email
        {
            get
            {
                return _user_email;
            }
            set
            {
                Onuser_emailChanging(value);
                ReportPropertyChanging("user_email");
                _user_email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("user_email");
                Onuser_emailChanged();
            }
        }
        private global::System.String _user_email;
        partial void Onuser_emailChanging(global::System.String value);
        partial void Onuser_emailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_password
        {
            get
            {
                return _user_password;
            }
            set
            {
                Onuser_passwordChanging(value);
                ReportPropertyChanging("user_password");
                _user_password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("user_password");
                Onuser_passwordChanged();
            }
        }
        private global::System.String _user_password;
        partial void Onuser_passwordChanging(global::System.String value);
        partial void Onuser_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                Onstatus_idChanging(value);
                ReportPropertyChanging("status_id");
                _status_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status_id");
                Onstatus_idChanged();
            }
        }
        private global::System.Int64 _status_id;
        partial void Onstatus_idChanging(global::System.Int64 value);
        partial void Onstatus_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 role_id
        {
            get
            {
                return _role_id;
            }
            set
            {
                Onrole_idChanging(value);
                ReportPropertyChanging("role_id");
                _role_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("role_id");
                Onrole_idChanged();
            }
        }
        private global::System.Int64 _role_id;
        partial void Onrole_idChanging(global::System.Int64 value);
        partial void Onrole_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean user_connected
        {
            get
            {
                return _user_connected;
            }
            set
            {
                Onuser_connectedChanging(value);
                ReportPropertyChanging("user_connected");
                _user_connected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_connected");
                Onuser_connectedChanged();
            }
        }
        private global::System.Boolean _user_connected;
        partial void Onuser_connectedChanging(global::System.Boolean value);
        partial void Onuser_connectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_key
        {
            get
            {
                return _user_key;
            }
            set
            {
                Onuser_keyChanging(value);
                ReportPropertyChanging("user_key");
                _user_key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("user_key");
                Onuser_keyChanged();
            }
        }
        private global::System.String _user_key;
        partial void Onuser_keyChanging(global::System.String value);
        partial void Onuser_keyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "FK_USER_ROLE", "ROLE")]
        public ROLE ROLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("RSSFeedDatabaseModel.FK_USER_ROLE", "ROLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("RSSFeedDatabaseModel.FK_USER_ROLE", "ROLE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ROLE> ROLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ROLE>("RSSFeedDatabaseModel.FK_USER_ROLE", "ROLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ROLE>("RSSFeedDatabaseModel.FK_USER_ROLE", "ROLE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "FK_USER_STATUS", "STATUS")]
        public STATUS STATUS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATUS>("RSSFeedDatabaseModel.FK_USER_STATUS", "STATUS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATUS>("RSSFeedDatabaseModel.FK_USER_STATUS", "STATUS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STATUS> STATUSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATUS>("RSSFeedDatabaseModel.FK_USER_STATUS", "STATUS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STATUS>("RSSFeedDatabaseModel.FK_USER_STATUS", "STATUS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "READ", "ITEM")]
        public EntityCollection<ITEM> ITEM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ITEM>("RSSFeedDatabaseModel.READ", "ITEM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ITEM>("RSSFeedDatabaseModel.READ", "ITEM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RSSFeedDatabaseModel", "SUBSCRIBE", "FEED")]
        public EntityCollection<FEED> FEED
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FEED>("RSSFeedDatabaseModel.SUBSCRIBE", "FEED");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FEED>("RSSFeedDatabaseModel.SUBSCRIBE", "FEED", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
